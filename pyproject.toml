[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pymapme"
version = "1.0.0"
description = "Transform Pydantic models from one structure to another with declarative field mapping."
readme = "README.md"
authors = ["funnydman"]
license = "GPL-3.0-or-later"
homepage = "https://github.com/funnydman/pymapme"
repository = "https://github.com/funnydman/pymapme"
keywords = ["pydantic", "mapping", "transformation", "data", "model"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]

packages = [
    { include = "pymapme", from = "src" }
]

[tool.poetry.build]
generate-setup-file = false

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/funnydman/pymapme/issues"
"Changelog" = "https://github.com/funnydman/pymapme/blob/main/CHANGELOG.md"
"Documentation" = "https://github.com/funnydman/pymapme#readme"


[tool.pytest.ini_options]
pythonpath = [".", "src"]
testpaths = ["tests"]

[tool.poetry.dependencies]
python = "^3.13"
pydantic = "^2.0.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.0"
pytest = "^8.0.0"
pytest-cov = "^6.0.0"
ruff = "^0.7.0"

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
